{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\LoginPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { adminLogin } from '../redux/action/adminAction';\nimport classnames from 'classnames';\n\nconst LoginPage = () => {\n  const store = useSelector(store => store);\n  const dispatch = useDispatch();\n  const [registrationNumber, setRegistrationNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (store.admin.isAuthenticated) {\n      history.push('/admin');\n    }\n  }, [store.admin.isAuthenticated]);\n  useEffect(() => {\n    if (store.error) {\n      setError(store.error);\n    }\n  }, [store.error]);\n\n  const fromHandler = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    dispatch(adminLogin({\n      registrationNumber,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    if (store.error || store.admin.isAuthenticated) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [store.error, store.admin.isAuthenticated]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-md-center align-items-center vh-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"ADMIN\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: fromHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \"Registration Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setRegistrationNumber(e.target.value),\n    type: \"text\",\n    value: registrationNumber,\n    className: classnames(\"form-control form-control-lg\", {\n      'is-invalid': error.registrationNumber\n    }),\n    id: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }), error.registrationNumber && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 67\n    }\n  }, error.registrationNumber)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": error.password\n    }),\n    value: password,\n    type: \"password\",\n    id: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }), error.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 57\n    }\n  }, error.password)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 49\n    }\n  }, \"Loading...\")))), !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 48\n    }\n  }, \"Login\")))))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/LoginPage.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","adminLogin","classnames","LoginPage","store","dispatch","registrationNumber","setRegistrationNumber","password","setPassword","error","setError","isLoading","setIsLoading","history","admin","isAuthenticated","push","fromHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminLogin } from '../redux/action/adminAction'\nimport classnames from 'classnames'\n\n\n\nconst LoginPage = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch( )\n    const [registrationNumber, setRegistrationNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    useEffect(() => {\n        if (store.admin.isAuthenticated) {\n            history.push('/admin')\n        }\n    }, [store.admin.isAuthenticated])\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const fromHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminLogin({registrationNumber, password}))\n       \n    }\n\n    useEffect(() => {\n        if (store.error ||\n            store.admin.isAuthenticated) {\n            setIsLoading(false)\n        }\n        \n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.isAuthenticated])\n\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\n                        <div>\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\n                            <form noValidate onSubmit={fromHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Registration Number</label>\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\n                                        {'is-invalid' : error.registrationNumber\n                                        \n                                        })} id=\"emailId\" />\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">Password</label>\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": error.password\n                                    })} value={password} type=\"password\" id=\"passwordId\" />\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n    )\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}