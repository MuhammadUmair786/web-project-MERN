{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\StudentUpdatePassword.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\nimport HomeHelper from '../Components/HomeHelper';\nimport { studentUpdatePassword } from '../redux/action/studentAction';\n\nconst StudentUpdatePassword = () => {\n  const store = useSelector(store => store);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [error, setError] = useState({});\n  useEffect(() => {\n    if (store.errorHelper) {\n      setError(store.errorHelper);\n      console.log(store.errorHelper);\n    }\n  }, [store.errorHelper]);\n\n  const formHandler = e => {\n    e.preventDefault();\n    dispatch(studentUpdatePassword({\n      registrationNumber: store.student.student.student.registrationNumber,\n      oldPassword,\n      newPassword,\n      confirmNewPassword\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, store.student.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HomeHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, \"Old Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setOldPassword(e.target.value),\n    type: \"password\",\n    value: oldPassword,\n    className: classnames(\"form-control\", {\n      'is-invalid': error.oldPassword\n    }),\n    id: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }), error.oldPassword && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 60\n    }\n  }, error.oldPassword)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setNewPassword(e.target.value),\n    value: newPassword,\n    className: classnames(\"form-control\", {\n      \"is-invalid\": error.newPassword\n    }),\n    value: newPassword,\n    type: \"password\",\n    id: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }), error.newPassword && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 60\n    }\n  }, error.newPassword)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordCId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, \"Confirm New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setConfirmNewPassword(e.target.value),\n    value: confirmNewPassword,\n    className: classnames(\"form-control\", {\n      \"is-invalid\": error.confirmNewPassword\n    }),\n    value: confirmNewPassword,\n    type: \"password\",\n    id: \"passwordCId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }), error.confirmNewPassword && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 67\n    }\n  }, error.confirmNewPassword)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-info btn-block \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Update Password\")))))) : history.push('/'));\n};\n\nexport default StudentUpdatePassword;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/StudentUpdatePassword.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Link","useHistory","classnames","HomeHelper","studentUpdatePassword","StudentUpdatePassword","store","history","dispatch","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","errorHelper","console","log","formHandler","e","preventDefault","registrationNumber","student","isAuthenticated","target","value","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAKA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,QAAMC,KAAK,GAAGR,WAAW,CAAEQ,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,KAAK,CAACW,WAAV,EAAuB;AACnBD,MAAAA,QAAQ,CAACV,KAAK,CAACW,WAAP,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACW,WAAlB;AACH;AACJ,GALQ,EAKN,CAACX,KAAK,CAACW,WAAP,CALM,CAAT;;AAMA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAd,IAAAA,QAAQ,CAACJ,qBAAqB,CAAC;AAAEmB,MAAAA,kBAAkB,EAAEjB,KAAK,CAACkB,OAAN,CAAcA,OAAd,CAAsBA,OAAtB,CAA8BD,kBAApD;AAAwEd,MAAAA,WAAxE;AAAqFE,MAAAA,WAArF;AAAkGE,MAAAA;AAAlG,KAAD,CAAtB,CAAR;AACH,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACkB,OAAN,CAAcC,eAAd,gBAAgC,uDAC7B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD6B,eAE7B;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEL,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,IAAA,QAAQ,EAAGC,CAAD,IAAOX,cAAc,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAAtC;AAAwD,IAAA,IAAI,EAAC,UAA7D;AAAwE,IAAA,KAAK,EAAElB,WAA/E;AAA4F,IAAA,SAAS,EAAEP,UAAU,CAAC,cAAD,EAC7G;AACI,oBAAca,KAAK,CAACN;AADxB,KAD6G,CAAjH;AAIQ,IAAA,EAAE,EAAC,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOKM,KAAK,CAACN,WAAN,iBAAsB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCM,KAAK,CAACN,WAAzC,CAP3B,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,IAAA,QAAQ,EAAGY,CAAD,IAAOT,cAAc,CAACS,CAAC,CAACK,MAAF,CAASC,KAAV,CAAtC;AAAwD,IAAA,KAAK,EAAEhB,WAA/D;AAA4E,IAAA,SAAS,EAAET,UAAU,CAAC,cAAD,EAAiB;AAC9G,oBAAca,KAAK,CAACJ;AAD0F,KAAjB,CAAjG;AAEI,IAAA,KAAK,EAAEA,WAFX;AAEwB,IAAA,IAAI,EAAC,UAF7B;AAEwC,IAAA,EAAE,EAAC,YAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKKI,KAAK,CAACJ,WAAN,iBAAsB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCI,KAAK,CAACJ,WAAzC,CAL3B,CAVJ,eAiBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,IAAA,QAAQ,EAAGU,CAAD,IAAOP,qBAAqB,CAACO,CAAC,CAACK,MAAF,CAASC,KAAV,CAA7C;AAA+D,IAAA,KAAK,EAAEd,kBAAtE;AAA0F,IAAA,SAAS,EAAEX,UAAU,CAAC,cAAD,EAAiB;AAC5H,oBAAca,KAAK,CAACF;AADwG,KAAjB,CAA/G;AAEI,IAAA,KAAK,EAAEA,kBAFX;AAE+B,IAAA,IAAI,EAAC,UAFpC;AAE+C,IAAA,EAAE,EAAC,aAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKKE,KAAK,CAACF,kBAAN,iBAA6B;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCE,KAAK,CAACF,kBAAzC,CALlC,CAjBJ,eAwBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,yBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAxBJ,CADJ,CADJ,CADJ,CAF6B,CAAhC,GAiCgBN,OAAO,CAACqB,IAAR,CAAa,GAAb,CAlCrB,CADJ;AAyCH,CA5DD;;AA8DA,eAAevB,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport HomeHelper from '../Components/HomeHelper'\nimport { studentUpdatePassword } from '../redux/action/studentAction'\n\n\n\n\nconst StudentUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setError(store.errorHelper)\n            console.log(store.errorHelper)\n        }\n    }, [store.errorHelper])\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-5 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n\n           \n\n        </div>\n    )\n}\n\nexport default StudentUpdatePassword\n"]},"metadata":{},"sourceType":"module"}