{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes';\n\nconst setFaculty = data => {\n  return {\n    type: SET_FACULTY,\n    payload: data\n  };\n};\n\nconst fetchStudentsHelper = data => {\n  return {\n    type: \"FETCH_STUDENTS\",\n    payload: data\n  };\n};\n\nconst subjectCodeListHelper = data => {\n  return {\n    type: \"GET_SUBJECTCODE_LIST\",\n    payload: data\n  };\n};\n\nexport const facultyLogin = facultyCredential => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/login\",\n        data: facultyCredential\n      });\n      const {\n        token\n      } = data; // Set token to local Storage\n\n      localStorage.setItem('facultyJwtToken', token); // Set token to Auth header\n\n      setAuthToken(token); // Decode token to get user data\n\n      const decoded = jwt_decode(token); // Set current user\n\n      dispatch(setFaculty(decoded));\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n};\nexport const facultyUpdatePassword = passwordData => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/updatePassword\",\n        data: passwordData\n      });\n      alert(\"Password Updated Successfully\");\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n};\nexport const getOTPFaculty = studentEmail => {\n  return async dispatch => {\n    try {\n      await axios({\n        method: 'Post',\n        url: 'http://localhost:5000/api/faculty/forgotPassword',\n        data: studentEmail\n      });\n      alert(\"Otp has been sent to your email\");\n      dispatch({\n        type: SET_FLAG\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n};\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/postOTP\",\n        data: newPasswordWithOtp\n      });\n      alert(\"Password Update, kindly login with updated password\");\n      history.push('/');\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n};\nexport const fetchStudents = (department, year, section) => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/fetchStudents\",\n        data: {\n          department,\n          year,\n          section\n        }\n      });\n      dispatch(fetchStudentsHelper(data.result));\n      dispatch(subjectCodeListHelper(data.subjectCode));\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n};\n\nconst facultyUpdateProfileFlag = data => {\n  return {\n    type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n    payload: data\n  };\n};\n\nexport const facultyUpdate = updatedData => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'Post',\n        url: `http://localhost:5000/api/faculty/updateProfile`,\n        data: updatedData\n      });\n      dispatch(facultyUpdateProfileFlag(true));\n    } catch (err) {\n      console.log(\"Error in sending message\", err.message);\n    }\n  };\n};\nexport const markAttendence = (selectedStudents, subjectCode, department, year, section) => {\n  return async dispatch => {\n    try {\n      await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/markAttendence\",\n        data: {\n          selectedStudents,\n          subjectCode,\n          department,\n          year,\n          section\n        }\n      });\n      alert(\"attendence has been marked successfully\");\n      dispatch({\n        type: \"HELPER\",\n        payload: true\n      });\n    } catch (err) {\n      console.log(\"Error in marking attendence, faculty action\", err.message);\n    }\n  };\n};\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks, department, year, section) => {\n  return async dispatch => {\n    try {\n      await axios({\n        method: 'Post',\n        url: \"http://localhost:5000/api/faculty/uploadMarks\",\n        data: {\n          subjectCode,\n          exam,\n          totalMarks,\n          marks,\n          department,\n          year,\n          section\n        }\n      });\n      alert(\"Mark uploaded successfully\");\n      dispatch({\n        type: \"HELPER\",\n        payload: true\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_ERRORS_HELPER,\n        payload: err.response.data\n      });\n    }\n  };\n};\nexport const setFacultyUser = data => {\n  return {\n    type: SET_FACULTY,\n    payload: data\n  };\n};\nexport const facultyLogout = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('facultyJwtToken'); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setFaculty({}));\n};","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/redux/action/facultyAction.js"],"names":["axios","setAuthToken","jwt_decode","SET_FACULTY","SET_ERRORS","SET_FLAG","SET_ERRORS_HELPER","setFaculty","data","type","payload","fetchStudentsHelper","subjectCodeListHelper","facultyLogin","facultyCredential","dispatch","method","url","token","localStorage","setItem","decoded","err","response","facultyUpdatePassword","passwordData","alert","getOTPFaculty","studentEmail","submitOTPFaculty","newPasswordWithOtp","history","push","fetchStudents","department","year","section","result","subjectCode","facultyUpdateProfileFlag","facultyUpdate","updatedData","console","log","message","markAttendence","selectedStudents","uploadMarks","exam","totalMarks","marks","setFacultyUser","facultyLogout","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\n\n\n\nconst setFaculty = (data) => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    }\n}\n\n\nconst fetchStudentsHelper = (data) => {\n    return {\n        type: \"FETCH_STUDENTS\",\n        payload: data\n    }\n}\n\nconst subjectCodeListHelper = (data) => {\n    return {\n        type: \"GET_SUBJECTCODE_LIST\",\n        payload: data\n    }\n}\n\n\nexport const facultyLogin = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"http://localhost:5000/api/faculty/login\",\n                data: facultyCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('facultyJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setFaculty(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const facultyUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"http://localhost:5000/api/faculty/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const getOTPFaculty = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: 'http://localhost:5000/api/faculty/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({ type: SET_FLAG })\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"http://localhost:5000/api/faculty/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const fetchStudents = (department, year, section) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"http://localhost:5000/api/faculty/fetchStudents\",\n                data: { department, year, section}\n            })\n            dispatch(fetchStudentsHelper(data.result))\n            dispatch(subjectCodeListHelper(data.subjectCode))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nconst facultyUpdateProfileFlag = (data) => {\n    return {\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n        payload: data\n    }\n}\n\nexport const facultyUpdate = (updatedData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: `http://localhost:5000/api/faculty/updateProfile`,\n                data: updatedData\n            })\n            dispatch(facultyUpdateProfileFlag(true))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\n           section) => {\n    return async(dispatch) => {\n        try {\n                await axios({\n                method: 'Post',\n                    url: \"http://localhost:5000/api/faculty/markAttendence\",\n                data: { selectedStudents, subjectCode, department, year, section}\n                })\n            alert(\"attendence has been marked successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n        }\n        catch (err) {\n           console.log(\"Error in marking attendence, faculty action\", err.message)\n        }\n    }\n}\n\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\n    department, year, section, ) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: \"http://localhost:5000/api/faculty/uploadMarks\",\n                data: {\n                    subjectCode, exam, totalMarks, marks, department, year, section,\n                    }\n            })\n            alert(\"Mark uploaded successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setFacultyUser = data => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    };\n}\n\nexport const facultyLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('facultyJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setFaculty({}));\n    };"]},"metadata":{},"sourceType":"module"}