{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\FacultyStudentLoginPags.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { facultyLogin } from '../redux/action/facultyAction';\nimport { studentLogin } from '../redux/action/studentAction';\nimport classnames from 'classnames';\nimport '../Style/facultyStudentLogin.css';\n\nconst FacultyStudentLoginPags = () => {\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [facultyRegNum, setFacultyRegNum] = useState('');\n  const [facultyPassword, setFacultyPassword] = useState('');\n  const [studentRegNum, setStudentRegNum] = useState('');\n  const [studentPassword, setStudentPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [errorsHelper, setErrorsHelper] = useState({});\n  const [isFacultyLoading, setIsFacultyLoading] = useState(false);\n  const [isStudentLoading, setIsStudentLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (store.faculty.isAuthenticated) {\n      history.push('/faculty');\n    }\n  }, [store.faculty.isAuthenticated]);\n  useEffect(() => {\n    if (store.error) {\n      setErrors(store.error);\n    }\n  }, [store.error]);\n  useEffect(() => {\n    if (store.student.isAuthenticated) {\n      history.push('/home');\n    }\n  }, [store.student.isAuthenticated]);\n  useEffect(() => {\n    if (store.errorHelper) {\n      setErrorsHelper(store.errorHelper);\n    }\n  }, [store.errorHelper]);\n\n  const facultyFormHandler = e => {\n    e.preventDefault();\n    let registrationNumber;\n    let password;\n    setIsFacultyLoading(true);\n    dispatch(facultyLogin({\n      registrationNumber: facultyRegNum,\n      password: facultyPassword\n    }));\n  };\n\n  useEffect(() => {\n    if (store.error || store.faculty.isAuthenticated) {\n      setIsFacultyLoading(false);\n    } else {\n      setIsFacultyLoading(true);\n    }\n  }, [store.error, store.faculty.isAuthenticated]);\n\n  const studentFormHandler = e => {\n    e.preventDefault();\n    let registrationNumber;\n    let password;\n    setIsStudentLoading(true);\n    dispatch(studentLogin({\n      registrationNumber: studentRegNum,\n      password: studentPassword\n    }));\n  };\n\n  useEffect(() => {\n    if (store.errorHelper || store.student.isAuthenticated) {\n      setIsStudentLoading(false);\n    } else {\n      setIsStudentLoading(false);\n    }\n  }, [store.errorHelper, store.student.isAuthenticated]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"trail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 m-auto border\",\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"1.2rem\",\n      padding: \"1rem 1rem 0rem 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"FACULTY\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: facultyFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"facRegId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }, \"Registration Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFacultyRegNum(e.target.value),\n    type: \"text\",\n    value: facultyRegNum,\n    className: classnames('form-control', {\n      'is-invalid': errors.registrationNumber\n    }),\n    id: \"facRegId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }), errors.registrationNumber && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, errors.registrationNumber)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordFacId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFacultyPassword(e.target.value),\n    value: facultyPassword,\n    className: classnames(\"form-control\", {\n      'is-invalid': errors.password\n    }),\n    type: \"password\",\n    id: \"passwordFacId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, isFacultyLoading && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 53\n    }\n  }, \"Loading...\")))), !isFacultyLoading && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 59\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center mt-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-center\",\n    to: \"/forgotPassword/faculty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 66\n    }\n  }, \"Forgot Password\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 m-auto border\",\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"1.2rem\",\n      padding: \"1rem 1rem 0rem 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"STUDENT\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: studentFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"studentId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, \"Registration Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setStudentRegNum(e.target.value),\n    type: \"text\",\n    value: studentRegNum,\n    className: classnames('form-control', {\n      'is-invalid': errorsHelper.registrationNumber\n    }),\n    id: \"studentId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }), errorsHelper.registrationNumber && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }, errorsHelper.registrationNumber)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setStudentPassword(e.target.value),\n    value: studentPassword,\n    className: classnames(\"form-control\", {\n      'is-invalid': errorsHelper.password\n    }),\n    type: \"password\",\n    id: \"passwordId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 41\n    }\n  }), errorsHelper.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, errorsHelper.password)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, isStudentLoading && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 53\n    }\n  }, \"Loading...\")))), !isStudentLoading && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info btn-block \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 59\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-center\",\n    to: \"/forgotPassword/student\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 60\n    }\n  }, \"Forgot Password\"))))))));\n};\n\nexport default FacultyStudentLoginPags;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/FacultyStudentLoginPags.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","Link","facultyLogin","studentLogin","classnames","FacultyStudentLoginPags","store","state","dispatch","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","setErrors","errorsHelper","setErrorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","history","faculty","isAuthenticated","push","error","student","errorHelper","facultyFormHandler","e","preventDefault","registrationNumber","password","studentFormHandler","backgroundColor","borderRadius","padding","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\nimport { facultyLogin } from '../redux/action/facultyAction'\nimport { studentLogin } from '../redux/action/studentAction'\nimport classnames from 'classnames'\n\nimport '../Style/facultyStudentLogin.css'\n\n\n\n\nconst FacultyStudentLoginPags = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const [facultyRegNum, setFacultyRegNum] = useState('')\n    const [facultyPassword, setFacultyPassword] = useState('')\n    const [studentRegNum, setStudentRegNum] = useState('')\n    const [studentPassword, setStudentPassword] = useState('')\n    const [errors, setErrors] = useState({})\n    const [errorsHelper, setErrorsHelper] = useState({})\n    const [isFacultyLoading, setIsFacultyLoading] = useState(false)\n    const [isStudentLoading, setIsStudentLoading] = useState(false)\n\n\n    const history = useHistory()\n\n    useEffect(() => {\n        if (store.faculty.isAuthenticated) {\n            history.push('/faculty')\n        }\n    }, [store.faculty.isAuthenticated])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n    useEffect(() => {\n        if (store.student.isAuthenticated) {\n            history.push('/home')\n        }\n    }, [store.student.isAuthenticated])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorsHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n\n\n\n\n\n    const facultyFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsFacultyLoading(true)\n        dispatch(facultyLogin({ registrationNumber: facultyRegNum, password: facultyPassword }))\n    }\n\n    useEffect(() => {\n        if (store.error || store.faculty.isAuthenticated) {\n            setIsFacultyLoading(false)\n        }\n        else {\n            setIsFacultyLoading(true)\n        }\n    }, [store.error, store.faculty.isAuthenticated])\n\n    const studentFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsStudentLoading(true)\n        dispatch(studentLogin({ registrationNumber: studentRegNum, password: studentPassword }))\n    }\n\n    useEffect(() => {\n        if (store.errorHelper ||\n            store.student.isAuthenticated) {\n            setIsStudentLoading(false)\n        }\n        else {\n            setIsStudentLoading(false)\n        }\n\n    }, [store.errorHelper, store.student.isAuthenticated])\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\" id=\"trail\">\n                <div className=\"col-md-6\">\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center \">FACULTY</h3>\n                                <form noValidate onSubmit={facultyFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"facRegId\">Registration Number</label>\n                                        <input onChange={(e) => setFacultyRegNum(e.target.value)} type=\"text\" value={facultyRegNum} className={classnames('form-control', {\n                                            'is-invalid': errors.registrationNumber\n                                        })}\n                                            id=\"facRegId\" />\n                                        {errors.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errors.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordFacId\">Password</label>\n                                        <input onChange={(e) => setFacultyPassword(e.target.value)} value={facultyPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errors.password\n                                        })}\n                                            type=\"password\" id=\"passwordFacId\" />\n                                        {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isFacultyLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n\n                                    {!isFacultyLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                                </form>\n                                <p className=\"text-center mt-2 \"><Link className=\"text-center\" to=\"/forgotPassword/faculty\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center\">STUDENT</h3>\n                                <form noValidate onSubmit={studentFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"studentId\">Registration Number</label>\n                                        <input onChange={(e) => setStudentRegNum(e.target.value)} type=\"text\" value={studentRegNum} className={classnames('form-control', {\n                                            'is-invalid': errorsHelper.registrationNumber\n                                        })}\n                                            id=\"studentId\" />\n                                        {errorsHelper.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordId\">Password</label>\n                                        <input onChange={(e) => setStudentPassword(e.target.value)} value={studentPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errorsHelper.password\n                                        })}\n                                            type=\"password\" id=\"passwordId\" />\n                                        {errorsHelper.password && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isStudentLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isStudentLoading && <button type=\"submit\" className=\"btn btn-info btn-block \">Login</button>}\n\n                                </form>\n                                <p className=\"text-center\"><Link className=\"text-center\" to=\"/forgotPassword/student\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FacultyStudentLoginPags\n"]},"metadata":{},"sourceType":"module"}