{"ast":null,"code":"import { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes';\nimport isEmpty from '../validation/is-empty';\nconst initialState = {\n  isAuthenticated: false,\n  student: {},\n  alongsideStudent: {},\n  flag: false,\n  chatHistory: [],\n  regNumStudent: {},\n  privateChat: [],\n  privateChat2: [],\n  newerChats: [],\n  previousChats: [],\n  allSubjects: [],\n  attendence: [],\n  allMarks: {}\n};\n\nconst studentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STUDENT:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        student: action.payload\n      };\n\n    case \"CHAT_HELPER\":\n      return { ...state,\n        alongsideStudent: action.payload\n      };\n\n    case SET_FLAG:\n      return { ...state,\n        flag: true\n      };\n\n    case \"SET_CHAT\":\n      return { ...state,\n        chatHistory: [state.chatHistory, action.payload]\n      };\n\n    case \"GET_STUDENT_BY_REG_NUM\":\n      {\n        return { ...state,\n          regNumStudent: action.payload\n        };\n      }\n\n    case \"GET_PRIVATE_CONVERSATION\":\n      {\n        return { ...state,\n          privateChat: action.payload\n        };\n      }\n\n    case \"GET_PRIVATE_CONVERSATION2\":\n      {\n        return { ...state,\n          privateChat2: action.payload\n        };\n      }\n\n    case \"GET_NEWER_CHATS\":\n      {\n        return { ...state,\n          newerChats: action.payload\n        };\n      }\n\n    case \"GET_PREVIOUS_CHATS\":\n      {\n        return { ...state,\n          previousChats: action.payload\n        };\n      }\n\n    case \"GET_ALL_SUBJECTS\":\n      return { ...state,\n        allSubjects: action.payload\n      };\n\n    case \"GET_ATTENDENCE\":\n      return { ...state,\n        attendence: action.payload\n      };\n\n    case \"GET_MARKS\":\n      return { ...state,\n        allMarks: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default studentReducer;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/redux/reducer/studentReducer.js"],"names":["SET_STUDENT","SET_OTP","SET_FLAG","isEmpty","initialState","isAuthenticated","student","alongsideStudent","flag","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","state","action","type","payload"],"mappings":"AACA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,gBAA/C;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,gBAAgB,EAAE,EAHD;AAIjBC,EAAAA,IAAI,EAAE,KAJW;AAKjBC,EAAAA,WAAW,EAAE,EALI;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,WAAW,EAAE,EAPI;AAQjBC,EAAAA,YAAY,EAAE,EARG;AASjBC,EAAAA,UAAU,EAAE,EATK;AAUjBC,EAAAA,aAAa,EAAE,EAVE;AAWjBC,EAAAA,WAAW,EAAE,EAXI;AAYjBC,EAAAA,UAAU,EAAE,EAZK;AAajBC,EAAAA,QAAQ,EAAE;AAbO,CAArB;;AAiBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,WAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHd,QAAAA,eAAe,EAAE,CAACF,OAAO,CAACiB,MAAM,CAACE,OAAR,CAFtB;AAGHhB,QAAAA,OAAO,EAAEc,MAAM,CAACE;AAHb,OAAP;;AAKJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHZ,QAAAA,gBAAgB,EAAEa,MAAM,CAACE;AAFtB,OAAP;;AAIJ,SAAKpB,QAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHX,QAAAA,IAAI,EAAE;AAFH,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHV,QAAAA,WAAW,EAAG,CAACU,KAAK,CAACV,WAAP,EAAoBW,MAAM,CAACE,OAA3B;AAFX,OAAP;;AAIJ,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGH,KADA;AAEHT,UAAAA,aAAa,EAAEU,MAAM,CAACE;AAFnB,SAAP;AAIH;;AACD,SAAK,0BAAL;AAAiC;AAC7B,eAAO,EACH,GAAGH,KADA;AAEHR,UAAAA,WAAW,EAAES,MAAM,CAACE;AAFjB,SAAP;AAIH;;AACD,SAAK,2BAAL;AAAkC;AAC9B,eAAO,EACH,GAAGH,KADA;AAEHP,UAAAA,YAAY,EAAEQ,MAAM,CAACE;AAFlB,SAAP;AAIH;;AACD,SAAK,iBAAL;AAAwB;AACpB,eAAO,EACH,GAAGH,KADA;AAEHN,UAAAA,UAAU,EAAEO,MAAM,CAACE;AAFhB,SAAP;AAIH;;AACD,SAAK,oBAAL;AAA2B;AACvB,eAAO,EACH,GAAGH,KADA;AAEHL,UAAAA,aAAa,EAAEM,MAAM,CAACE;AAFnB,SAAP;AAIH;;AACD,SAAK,kBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,WAAW,EAAEK,MAAM,CAACE;AAFjB,OAAP;;AAKJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFhB,OAAP;;AAKJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAvER;AA0EH,CA3ED;;AA6EA,eAAeD,cAAf","sourcesContent":["\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    student: {},\n    alongsideStudent: {},\n    flag: false,\n    chatHistory: [],\n    regNumStudent: {},\n    privateChat: [],\n    privateChat2: [],\n    newerChats: [],\n    previousChats: [],\n    allSubjects: [],\n    attendence: [], \n    allMarks: {}\n}\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STUDENT:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                student: action.payload\n            }\n        case \"CHAT_HELPER\":\n            return {\n                ...state,\n                alongsideStudent: action.payload\n            }\n        case SET_FLAG:\n            return {\n                ...state,\n                flag: true\n            }\n        case \"SET_CHAT\":\n            return {\n                ...state, \n                chatHistory : [state.chatHistory, action.payload]\n            }\n        case \"GET_STUDENT_BY_REG_NUM\": {\n            return {\n                ...state,\n                regNumStudent: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION\": {\n            return {\n                ...state,\n                privateChat: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION2\": {\n            return {\n                ...state,\n                privateChat2: action.payload\n            }\n        }\n        case \"GET_NEWER_CHATS\": {\n            return {\n                ...state,\n                newerChats: action.payload\n            }\n        }\n        case \"GET_PREVIOUS_CHATS\": {\n            return {\n                ...state,\n                previousChats: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECTS\": \n            return {\n                ...state,\n                allSubjects: action.payload\n            }\n        \n        case \"GET_ATTENDENCE\": \n            return {\n                ...state,\n                attendence: action.payload\n            }\n        \n        case \"GET_MARKS\": \n            return {\n                ...state,\n                allMarks: action.payload\n            }\n        \n        default:\n            return state\n        \n    } \n}\n\nexport default studentReducer"]},"metadata":{},"sourceType":"module"}