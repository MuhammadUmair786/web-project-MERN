{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\AdminAddStudent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { adminAddStudent } from '../redux/action/adminAction';\nimport AdminHomeHelper from '../Components/AdminHomeHelper';\n\nconst AdminAddStudent = () => {\n  const store = useSelector(store => store);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [department, setDepartment] = useState('');\n  const [year, setYear] = useState('');\n  const [section, setSection] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [studentMobileNumber, setContactNumber] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [fatherMobileNumber, setFatherContactNumber] = useState('');\n  const [aadharCard, setAadharCard] = useState('');\n  const [error, setError] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (store.error) {\n      setError(store.error);\n    }\n  }, [store.error]);\n\n  const formHandler = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    dispatch(adminAddStudent({\n      name,\n      email,\n      year,\n      department,\n      fatherName,\n      aadharCard,\n      gender,\n      section: section.toUpperCase(),\n      dob: dob.split(\"-\").reverse().join(\"-\"),\n      studentMobileNumber,\n      fatherMobileNumber\n    }));\n  };\n\n  useEffect(() => {\n    if (store.admin.adminAddStudentFlag) {\n      setError({});\n    }\n  }, [store.admin.adminAddStudentFlag]);\n  useEffect(() => {\n    if (store.error || store.admin.adminAddStudentFlag) {\n      setIsLoading(false);\n    }\n  }, [store.error, store.admin.adminAddStudentFlag]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, store.admin.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminHomeHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, \"Student Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    className: classnames(\"form-control\", {\n      'is-invalid': error.name\n    }),\n    id: \"nameId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }), error.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 61\n    }\n  }, error.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    className: classnames(\"form-control\", {\n      'is-invalid': error.email\n    }),\n    id: \"emailId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  }), error.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 62\n    }\n  }, error.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"departmentId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setDepartment(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': error.department\n    }),\n    id: \"departmentId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 49\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"E.C.E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 49\n    }\n  }, \"E.C.E\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C.S.E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 49\n    }\n  }, \"C.S.E\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"I.T\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }\n  }, \"I.T\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"E.E.E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 49\n    }\n  }, \"E.E.E\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mechanical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 49\n    }\n  }, \"Mechanical\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Civil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 49\n    }\n  }, \"Civil\")), error.department && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 67\n    }\n  }, error.department)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"yearId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setYear(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': error.year\n    }),\n    id: \"yearId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 49\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 49\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 49\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 49\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 49\n    }\n  }, \"4\")), error.year && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 61\n    }\n  }, error.year)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sectionId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 45\n    }\n  }, \"Section\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setSection(e.target.value),\n    type: \"text\",\n    className: classnames(\"form-control\", {\n      'is-invalid': error.section\n    }),\n    id: \"sectionId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 45\n    }\n  }), error.section && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 64\n    }\n  }, error.section)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dobId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  }, \"DOB\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setDob(e.target.value),\n    type: \"date\",\n    className: classnames(\"form-control\", {\n      'is-invalid': error.dob\n    }),\n    id: \"dobId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }), error.dob && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 60\n    }\n  }, error.dob))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"genderId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 45\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setGender(e.target.value),\n    class: \"form-control\",\n    id: \"genderId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 49\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 49\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }, \"Other\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numberId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setContactNumber(e.target.value),\n    required: true,\n    type: \"number\",\n    class: \"form-control\",\n    id: \"numberId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fatherId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, \"Father Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFatherName(e.target.value),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"fatherId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fathercnId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, \"Father Contact Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setFatherContactNumber(e.target.value),\n    type: \"number\",\n    className: \"form-control\",\n    id: \"fathercnId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"aadharId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, \"Aadhar Card Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setAadharCard(e.target.value),\n    type: \"number\",\n    className: \"form-control\",\n    id: \"aadharId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  }, \"Loading...\")))), !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 48\n    }\n  }, \"Add Student\")))))) : history.push('/'));\n};\n\nexport default AdminAddStudent;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/AdminAddStudent.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","classnames","adminAddStudent","AdminHomeHelper","AdminAddStudent","store","dispatch","history","name","setName","email","setEmail","department","setDepartment","year","setYear","section","setSection","dob","setDob","gender","setGender","studentMobileNumber","setContactNumber","fatherName","setFatherName","fatherMobileNumber","setFatherContactNumber","aadharCard","setAadharCard","error","setError","isLoading","setIsLoading","formHandler","e","preventDefault","toUpperCase","split","reverse","join","admin","adminAddStudentFlag","isAuthenticated","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddStudent } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddStudent = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [section, setSection] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddStudent({\n            name,\n            email,\n            year,\n            department,\n            fatherName,\n            aadharCard,\n            gender,\n            section: section.toUpperCase(),\n            dob: dob.split(\"-\").reverse().join(\"-\"),\n            studentMobileNumber,\n            fatherMobileNumber\n        }))\n    } \n    useEffect(() => {\n        if (store.admin.adminAddStudentFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddStudentFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddStudentFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddStudentFlag])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Student Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.year\n                                                })} id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.section\n                                                })} id=\"sectionId\" />\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fatherId\">Father Name</label>\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>:(history.push('/'))}\n            \n            </div>\n\n            \n      \n    )\n}\n\nexport default AdminAddStudent\n"]},"metadata":{},"sourceType":"module"}