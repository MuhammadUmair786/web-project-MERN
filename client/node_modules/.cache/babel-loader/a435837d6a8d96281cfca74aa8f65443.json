{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\ForgotPassword.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction';\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction';\nimport classnames from 'classnames';\n\nconst ForgotPassword = props => {\n  const store = useSelector(store => store);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [helper, setHelper] = useState(false);\n  useEffect(() => {\n    setUser(props.match.params.user);\n  }, [user]);\n  useEffect(() => {\n    if (store.error) {\n      setErrors(store.error);\n    }\n  }, [store.error]);\n  useEffect(() => {\n    if (store.student.flag) {\n      setHelper(true);\n    }\n  }, [store.student.flag]);\n\n  const sendOTPHandler = e => {\n    e.preventDefault();\n\n    if (user === \"student\") {\n      dispatch(getOTPStudent({\n        email\n      }));\n    } else if (user === \"faculty\") {\n      dispatch(getOTPFaculty({\n        email\n      }));\n    }\n  };\n\n  const submitOTPHandler = e => {\n    e.preventDefault();\n\n    if (user === \"student\") {\n      dispatch(submitOTPStudent({\n        email,\n        otp,\n        newPassword,\n        confirmNewPassword\n      }, history));\n    } else if (user === \"faculty\") {\n      dispatch(submitOTPFaculty({\n        email,\n        otp,\n        newPassword,\n        confirmNewPassword\n      }, history));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, !helper ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: sendOTPHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    type: \"email\",\n    className: classnames('form-control', {\n      'is-invalid': errors.email\n    }),\n    id: \"exampleInputEmail11\",\n    placeholder: \"Provide our registered email\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"OTP will be only valid for 5 minute.\"), errors.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, errors.email)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Send OTP\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: submitOTPHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, \"OTP\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setOtp(e.target.value),\n    value: otp,\n    type: \"number\",\n    className: classnames('form-control', {\n      'is-invalid': errors.otp\n    }),\n    id: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }), errors.otp && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, errors.otp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setNewPassword(e.target.value),\n    value: newPassword,\n    type: \"password\",\n    className: classnames('form-control', {\n      'is-invalid': errors.newPassword\n    }),\n    id: \"exampleInputEmail2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }), errors.newPassword && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, errors.newPassword)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, \"Confirm New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setConfirmNewPassword(e.target.value),\n    value: confirmNewPassword,\n    type: \"password\",\n    className: classnames('form-control', {\n      'is-invalid': errors.confirmNewPassword\n    }),\n    id: \"exampleInputEmail3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }), errors.confirmNewPassword && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, errors.confirmNewPassword)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n};\n\nexport default withRouter(ForgotPassword);","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/ForgotPassword.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","withRouter","useHistory","getOTPStudent","submitOTPStudent","getOTPFaculty","submitOTPFaculty","classnames","ForgotPassword","props","store","dispatch","history","user","setUser","email","setEmail","otp","setOtp","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","errors","setErrors","helper","setHelper","match","params","error","student","flag","sendOTPHandler","e","preventDefault","submitOTPHandler","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n\n    useEffect(() => {\n        setUser(props.match.params.user)\n    }, [user])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.student.flag) {\n            setHelper(true)\n        }\n    },[store.student.flag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(getOTPStudent({ email }))\n        }\n        else if (user === \"faculty\") {\n           dispatch(getOTPFaculty({email}))\n        }\n    }\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\n        }\n        else if (user === \"faculty\")\n        {\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\n            }\n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n"]},"metadata":{},"sourceType":"module"}