{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sajid Bashir\\\\Documents\\\\Web_Projects_NodeJS\\\\college-erp-master\\\\client\\\\src\\\\Pages\\\\Faculty\\\\FacultyUploadMarks.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction';\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper';\nimport { useHistory } from 'react-router-dom';\n\nconst FacultyUploadMarks = () => {\n  const store = useSelector(store => store);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [department, setDepartment] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [marks, setMarks] = useState([]);\n  const [section, setSection] = useState(\"\");\n  const [subjectCode, setSubjectCode] = useState(\"\");\n  const [totalMarks, setTotalMarks] = useState();\n  const [exam, setExam] = useState(\"\");\n  const [error, setError] = useState({});\n  const [errorHelper, setErrorHelper] = useState({});\n\n  const handleInputChange = (value, _id) => {\n    const newMarks = [...marks];\n    let index = newMarks.findIndex(m => m._id === _id);\n\n    if (index === -1) {\n      newMarks.push({\n        _id,\n        value\n      });\n    } else {\n      newMarks[index].value = value;\n    }\n\n    setMarks(newMarks);\n  };\n\n  useEffect(() => {\n    if (store.error) {\n      setError(store.error);\n    }\n  }, [store.error]);\n  useEffect(() => {\n    if (store.errorHelper) {\n      setErrorHelper(store.errorHelper);\n    }\n  }, [store.errorHelper]);\n\n  const formHandler = e => {\n    e.preventDefault();\n    dispatch(fetchStudents(department, year, section));\n  };\n\n  const secondFormHandler = e => {\n    e.preventDefault();\n    dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, store.faculty.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FacultyHomeHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), store.faculty.fetchedStudentsHelper && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center mt-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"branchId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setDepartment(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': error.department\n    }),\n    id: \"bramchId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: store.faculty.faculty.faculty.department,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, store.faculty.faculty.faculty.department)), error.department && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 55\n    }\n  }, error.department)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"yearId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setYear(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': error.year\n    }),\n    id: \"yearId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"4\")), error.year && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, error.year)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sectionId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, \"Section\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setSection(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': error.section\n    }),\n    id: \"sectionId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"E\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"F\")), error.section && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 52\n    }\n  }, error.section)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Search\")))), !store.faculty.fetchedStudentsHelper && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row  justify-content-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: secondFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"subjectId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, \"Subject Code\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setSubjectCode(e.target.value),\n    className: classnames(\"form-control\", {\n      'is-invalid': errorHelper.subjectCode\n    }),\n    id: \"subjectId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"Select\"), store.faculty.allSubjectCodeList.map(subjectCodeName => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 45\n    }\n  }, subjectCodeName))), errorHelper.subjectCode && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 62\n    }\n  }, errorHelper.subjectCode)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"examId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Exam\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setExam(e.target.value),\n    value: exam,\n    className: classnames(\"form-control\", {\n      'is-invalid': errorHelper.exam\n    }),\n    id: \"examId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CycleTest1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, \"Cycle Test 1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"CycleTest2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, \"Cylce Test 2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Semester\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 37\n    }\n  }, \"Semester\")), errorHelper.exam && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 55\n    }\n  }, errorHelper.exam)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"marksId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"Total Marks\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: classnames(\"form-control\", {\n      'is-invalid': errorHelper.totalMarks\n    }),\n    id: \"marksId\",\n    value: totalMarks,\n    onChange: e => setTotalMarks(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }), errorHelper.totalMarks && /*#__PURE__*/React.createElement(\"div\", {\n    classNameName: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 61\n    }\n  }, errorHelper.totalMarks)), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, \"Registration Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }, \"Student Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 41\n    }\n  }, \"Marks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, store.faculty.fetchedStudents.map((obj, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 49\n    }\n  }, obj.registrationNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 49\n    }\n  }, obj.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    required: true,\n    type: \"number\",\n    value: obj.marks,\n    onChange: e => handleInputChange(e.target.value, obj._id),\n    id: \"defaultCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 53\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))) : history.push('/'));\n};\n\nexport default FacultyUploadMarks;","map":{"version":3,"sources":["C:/Users/Sajid Bashir/Documents/Web_Projects_NodeJS/college-erp-master/client/src/Pages/Faculty/FacultyUploadMarks.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","classnames","fetchStudents","uploadMarks","FacultyHomeHelper","useHistory","FacultyUploadMarks","store","history","dispatch","department","setDepartment","year","setYear","marks","setMarks","section","setSection","subjectCode","setSubjectCode","totalMarks","setTotalMarks","exam","setExam","error","setError","errorHelper","setErrorHelper","handleInputChange","value","_id","newMarks","index","findIndex","m","push","formHandler","e","preventDefault","secondFormHandler","faculty","isAuthenticated","fetchedStudentsHelper","target","allSubjectCodeList","map","subjectCodeName","fetchedStudents","obj","registrationNumber","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst FacultyUploadMarks = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch() \n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [marks, setMarks] = useState([])\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [totalMarks, setTotalMarks] = useState()\n    const [exam ,setExam] = useState(\"\")\n    const [error, setError] = useState({})\n    const [errorHelper, setErrorHelper] = useState({})\n\n   \n\n\n    const handleInputChange = (value, _id) => {\n    \n        const newMarks = [...marks]\n        let index = newMarks.findIndex(m => m._id === _id)\n        if (index === -1) {\n            newMarks.push({ _id, value })\n        }\n        else {\n           newMarks[index].value = value\n        }\n        setMarks(newMarks)\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n    \n       dispatch(fetchStudents(department, year,  section))\n\n    }\n\n\n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section\n        ))\n    }\n\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"bramchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"semesterId\">Semester</label>\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.semester\n\n                                    })} id=\"semesterId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                </select>\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.subjectCode\n\n                                    })} id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"examId\">Exam</label>\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.exam\n\n                                    })} id=\"examId\">\n                                    <option>Select</option>\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\n                                    <option value=\"Semester\">Semester</option>\n                                </select>\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"marksId\">Total Marks</label>\n                                <input type=\"number\" className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.totalMarks\n\n                                    })} id=\"marksId\"\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\n                            </div>\n\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                        <th scope=\"col\">Marks</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr key={index}>\n                                                <td>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\n                                                </div></td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n                }\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUploadMarks\n"]},"metadata":{},"sourceType":"module"}